//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFConsoleApp.MovieServiceClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/bai03_wcfService")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BoxOfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFConsoleApp.MovieServiceClient.Genre GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RunningTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BoxOffice {
            get {
                return this.BoxOfficeField;
            }
            set {
                if ((this.BoxOfficeField.Equals(value) != true)) {
                    this.BoxOfficeField = value;
                    this.RaisePropertyChanged("BoxOffice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFConsoleApp.MovieServiceClient.Genre Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenreId {
            get {
                return this.GenreIdField;
            }
            set {
                if ((this.GenreIdField.Equals(value) != true)) {
                    this.GenreIdField = value;
                    this.RaisePropertyChanged("GenreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RunningTime {
            get {
                return this.RunningTimeField;
            }
            set {
                if ((this.RunningTimeField.Equals(value) != true)) {
                    this.RunningTimeField = value;
                    this.RaisePropertyChanged("RunningTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/bai03_wcfService")]
    [System.SerializableAttribute()]
    public partial class Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie> MoviesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenreId {
            get {
                return this.GenreIdField;
            }
            set {
                if ((this.GenreIdField.Equals(value) != true)) {
                    this.GenreIdField = value;
                    this.RaisePropertyChanged("GenreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie> Movies {
            get {
                return this.MoviesField;
            }
            set {
                if ((object.ReferenceEquals(this.MoviesField, value) != true)) {
                    this.MoviesField = value;
                    this.RaisePropertyChanged("Movies");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieServiceClient.IMovieService")]
    public interface IMovieService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/getAll", ReplyAction="http://tempuri.org/IMovieService/getAllResponse")]
        System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie> getAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/getAll", ReplyAction="http://tempuri.org/IMovieService/getAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie>> getAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Search", ReplyAction="http://tempuri.org/IMovieService/SearchResponse")]
        System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie> Search(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Search", ReplyAction="http://tempuri.org/IMovieService/SearchResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie>> SearchAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Add", ReplyAction="http://tempuri.org/IMovieService/AddResponse")]
        bool Add(WCFConsoleApp.MovieServiceClient.Movie m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Add", ReplyAction="http://tempuri.org/IMovieService/AddResponse")]
        System.Threading.Tasks.Task<bool> AddAsync(WCFConsoleApp.MovieServiceClient.Movie m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Edit", ReplyAction="http://tempuri.org/IMovieService/EditResponse")]
        bool Edit(WCFConsoleApp.MovieServiceClient.Movie m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Edit", ReplyAction="http://tempuri.org/IMovieService/EditResponse")]
        System.Threading.Tasks.Task<bool> EditAsync(WCFConsoleApp.MovieServiceClient.Movie m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Delete", ReplyAction="http://tempuri.org/IMovieService/DeleteResponse")]
        bool Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Delete", ReplyAction="http://tempuri.org/IMovieService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieServiceChannel : WCFConsoleApp.MovieServiceClient.IMovieService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieServiceClient : System.ServiceModel.ClientBase<WCFConsoleApp.MovieServiceClient.IMovieService>, WCFConsoleApp.MovieServiceClient.IMovieService {
        
        public MovieServiceClient() {
        }
        
        public MovieServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie> getAll() {
            return base.Channel.getAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie>> getAllAsync() {
            return base.Channel.getAllAsync();
        }
        
        public System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie> Search(string text) {
            return base.Channel.Search(text);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFConsoleApp.MovieServiceClient.Movie>> SearchAsync(string text) {
            return base.Channel.SearchAsync(text);
        }
        
        public bool Add(WCFConsoleApp.MovieServiceClient.Movie m) {
            return base.Channel.Add(m);
        }
        
        public System.Threading.Tasks.Task<bool> AddAsync(WCFConsoleApp.MovieServiceClient.Movie m) {
            return base.Channel.AddAsync(m);
        }
        
        public bool Edit(WCFConsoleApp.MovieServiceClient.Movie m) {
            return base.Channel.Edit(m);
        }
        
        public System.Threading.Tasks.Task<bool> EditAsync(WCFConsoleApp.MovieServiceClient.Movie m) {
            return base.Channel.EditAsync(m);
        }
        
        public bool Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
